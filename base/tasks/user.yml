---
- name: create user
  become: true
  user:
    name: "{{ user.name }}"
    groups: adm,sudo
    password: "{{ user.password_sha1 }}"
    update_password: on_create
    shell: /bin/bash

- name: add sudoers
  become: true
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: "^{{ user.name }} "
      line: "{{ user.name }} ALL=(ALL) NOPASSWD: ALL"

# ssh config
- block: 
  - name: check authorized_keys
    local_action: "command cat {{ user.local_pub_key_path }}"
    register: key
    changed_when: false

  - name: create ~/.ssh
    become: true
    file:
      path: "/home/{{ user.name }}/.ssh"
      state: directory
      owner: "{{ user.name }}"
      group: "{{ user.group }}"
      mode: '0700'

  - name: insert authorized_keys for user
    become: true
    blockinfile:
      path: "/home/{{ user.name }}/.ssh/authorized_keys"
      owner: "{{ user.name }}"
      group: "{{ user.group }}"
      block: "{{ key.stdout }}"
      create: yes
      mode: '0600'

  - name: restart sshd
    become: true
    systemd:
      name: sshd
      state: restarted

- name: set /etc/systemd/resolved.conf
  become: true
  lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - regexp: "(^|^#)Domains="
      line: "Domains={{ search_domains | join(' ') }}"
    - regexp: "(^|^#)DNS="
      line: "DNS={{ nameservers | join(' ') }}"
  register: resolved_conf

- name: restart systemd-resolved
  become: true
  systemd:
    state: restarted
    name: systemd-resolved
  when: resolved_conf.changed == true

- name: enable systemd-resolved
  become: true
  systemd:
    state: started
    enabled: true
    name: systemd-resolved
